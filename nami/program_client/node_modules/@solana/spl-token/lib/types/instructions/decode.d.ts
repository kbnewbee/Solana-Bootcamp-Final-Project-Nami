import type { TransactionInstruction } from '@solana/web3.js';
import type { DecodedAmountToUiAmountInstruction } from '@solana/spl-token/src/instructions/amountToUiAmount';
import type { DecodedApproveInstruction } from '@solana/spl-token/src/instructions/approve';
import type { DecodedApproveCheckedInstruction } from '@solana/spl-token/src/instructions/approveChecked';
import type { DecodedBurnInstruction } from '@solana/spl-token/src/instructions/burn';
import type { DecodedBurnCheckedInstruction } from '@solana/spl-token/src/instructions/burnChecked';
import type { DecodedCloseAccountInstruction } from '@solana/spl-token/src/instructions/closeAccount';
import type { DecodedFreezeAccountInstruction } from '@solana/spl-token/src/instructions/freezeAccount';
import type { DecodedInitializeAccountInstruction } from '@solana/spl-token/src/instructions/initializeAccount';
import type { DecodedInitializeAccount2Instruction } from '@solana/spl-token/src/instructions/initializeAccount2';
import type { DecodedInitializeAccount3Instruction } from '@solana/spl-token/src/instructions/initializeAccount3';
import type { DecodedInitializeMintInstruction } from '@solana/spl-token/src/instructions/initializeMint';
import type { DecodedInitializeMint2Instruction } from '@solana/spl-token/src/instructions/initializeMint2';
import type { DecodedInitializeMultisigInstruction } from '@solana/spl-token/src/instructions/initializeMultisig';
import type { DecodedMintToInstruction } from '@solana/spl-token/src/instructions/mintTo';
import type { DecodedMintToCheckedInstruction } from '@solana/spl-token/src/instructions/mintToChecked';
import type { DecodedRevokeInstruction } from '@solana/spl-token/src/instructions/revoke';
import type { DecodedSetAuthorityInstruction } from '@solana/spl-token/src/instructions/setAuthority';
import type { DecodedSyncNativeInstruction } from '@solana/spl-token/src/instructions/syncNative';
import type { DecodedThawAccountInstruction } from '@solana/spl-token/src/instructions/thawAccount';
import type { DecodedTransferInstruction } from '@solana/spl-token/src/instructions/transfer';
import type { DecodedTransferCheckedInstruction } from '@solana/spl-token/src/instructions/transferChecked';
import type { DecodedUiAmountToAmountInstruction } from '@solana/spl-token/src/instructions/uiAmountToAmount';
/** TODO: docs */
export type DecodedInstruction = DecodedInitializeMintInstruction | DecodedInitializeAccountInstruction | DecodedInitializeMultisigInstruction | DecodedTransferInstruction | DecodedApproveInstruction | DecodedRevokeInstruction | DecodedSetAuthorityInstruction | DecodedMintToInstruction | DecodedBurnInstruction | DecodedCloseAccountInstruction | DecodedFreezeAccountInstruction | DecodedThawAccountInstruction | DecodedTransferCheckedInstruction | DecodedApproveCheckedInstruction | DecodedMintToCheckedInstruction | DecodedBurnCheckedInstruction | DecodedInitializeAccount2Instruction | DecodedSyncNativeInstruction | DecodedInitializeAccount3Instruction | DecodedInitializeMint2Instruction | DecodedAmountToUiAmountInstruction | DecodedUiAmountToAmountInstruction | never;
/** TODO: docs */
export declare function decodeInstruction(instruction: TransactionInstruction, programId?: import("@solana/web3.js").PublicKey): DecodedInstruction;
/** TODO: docs */
export declare function isInitializeMintInstruction(decoded: DecodedInstruction): decoded is DecodedInitializeMintInstruction;
/** TODO: docs */
export declare function isInitializeAccountInstruction(decoded: DecodedInstruction): decoded is DecodedInitializeAccountInstruction;
/** TODO: docs */
export declare function isInitializeMultisigInstruction(decoded: DecodedInstruction): decoded is DecodedInitializeMultisigInstruction;
/** TODO: docs */
export declare function isTransferInstruction(decoded: DecodedInstruction): decoded is DecodedTransferInstruction;
/** TODO: docs */
export declare function isApproveInstruction(decoded: DecodedInstruction): decoded is DecodedApproveInstruction;
/** TODO: docs */
export declare function isRevokeInstruction(decoded: DecodedInstruction): decoded is DecodedRevokeInstruction;
/** TODO: docs */
export declare function isSetAuthorityInstruction(decoded: DecodedInstruction): decoded is DecodedSetAuthorityInstruction;
/** TODO: docs */
export declare function isMintToInstruction(decoded: DecodedInstruction): decoded is DecodedMintToInstruction;
/** TODO: docs */
export declare function isBurnInstruction(decoded: DecodedInstruction): decoded is DecodedBurnInstruction;
/** TODO: docs */
export declare function isCloseAccountInstruction(decoded: DecodedInstruction): decoded is DecodedCloseAccountInstruction;
/** TODO: docs */
export declare function isFreezeAccountInstruction(decoded: DecodedInstruction): decoded is DecodedFreezeAccountInstruction;
/** TODO: docs */
export declare function isThawAccountInstruction(decoded: DecodedInstruction): decoded is DecodedThawAccountInstruction;
/** TODO: docs */
export declare function isTransferCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedTransferCheckedInstruction;
/** TODO: docs */
export declare function isApproveCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedApproveCheckedInstruction;
/** TODO: docs */
export declare function isMintToCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedMintToCheckedInstruction;
/** TODO: docs */
export declare function isBurnCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedBurnCheckedInstruction;
/** TODO: docs */
export declare function isInitializeAccount2Instruction(decoded: DecodedInstruction): decoded is DecodedInitializeAccount2Instruction;
/** TODO: docs */
export declare function isSyncNativeInstruction(decoded: DecodedInstruction): decoded is DecodedSyncNativeInstruction;
/** TODO: docs */
export declare function isInitializeAccount3Instruction(decoded: DecodedInstruction): decoded is DecodedInitializeAccount3Instruction;
/** TODO: docs, implement */
/** TODO: docs */
export declare function isInitializeMint2Instruction(decoded: DecodedInstruction): decoded is DecodedInitializeMint2Instruction;
/** TODO: docs */
export declare function isAmountToUiAmountInstruction(decoded: DecodedInstruction): decoded is DecodedAmountToUiAmountInstruction;
/** TODO: docs */
export declare function isUiamountToAmountInstruction(decoded: DecodedInstruction): decoded is DecodedUiAmountToAmountInstruction;
//# sourceMappingURL=decode.d.ts.map